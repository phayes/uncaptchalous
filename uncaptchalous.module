<?php
/**
 * @file
 * This module provides an unobtrusive form anti-spam method as an alternative to an HCI challege-response test such as a CAPTCHA
 *
 * Development sponsored by LevelTen Interactive
 *
 * @author Dustin Currie <dustinc@getlevelten.com>
 */

/**
 * Implementation of hook_menu().
 */

function uncaptchalous_menu() {
    $items['admin/settings/uncaptchalous'] = array(
    'title' => 'un.captcha.lous',
    'description' => 'Administer unobtrusive form anti-spam techniques',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uncaptchalous_settings'),
    'access arguments' => array('administer un.captcha.lous settings'),
  );

  return $items;
}

/**
 * Implementation of hook_perm().
 */
function uncaptchalous_perm() {
  return array("administer un.captcha.lous settings");
}

/**
 * Implementation of hook_help().
 */

function uncaptchalous_help($section) {
  switch ($section) {
    case 'admin/settings#uncaptchalous':
      return t('<p>Administer unobtrusive form anti-spam techniques.</p>');
      break;
  }
}

/**
 * Menu callback for admin/webform/settings.
 */

function uncaptchalous_settings() {
  $form = array();

  $form['uncaptchalous_javascript'] = array(
    '#type' => 'checkbox',
    '#title' => t('Hidden Javascript actions'),
    '#description' => t('Require Javascript to perform actions on hidden elements in forms for
                         forms to validate. If these actions are not performed, it is assumed
                         that the form was not submitted by a human user.  NOTE: This method requires javascript'),
    '#default_value' => variable_get('uncaptchalous_javascript', 0),

  );
  $form['honeypot'] = array(
    '#type' => 'fieldset',
    '#title' => t('Honeypot Field'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#description' => t('Create a textfield that is not displayed in forms.  If this form is filled out
                        it is assumed to be filled by a spam bot and does not validate.'),

  );
  $form['honeypot']['uncaptchalous_honeypot_field'] = array(
    '#type' => 'checkbox',
    '#title' => t('Honeypot field'),
    '#description' => t('Enable Honeypot'),
    '#default_value' => variable_get('uncaptchalous_honeypot_field', 0),

  );
  $form['honeypot']['uncaptchalous_honeypot_field_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title for honeypot field'),
    '#description' => t('Change this value to throw off bots'),
    '#default_value' => variable_get('uncaptchalous_honeypot_field_title', 'url'),
  );
  $form['form_vis_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Form specific visibility settings'),
    '#collapsible' => TRUE,
  );
   $access = user_access('use PHP for block visibility');
   $options = array(t('Use on every form except the listed form ids.'), t('Show on only the listed form ids.'));
   $description = t("Enter one form id per line as Drupal paths. The '*' character is a wildcard. Example paths are %blog for the blog page and %blog-wildcard for every personal blog. %front is the front page.", array('%blog' => 'blog', '%blog-wildcard' => 'blog/*', '%front' => '<front>'));

   if ($access) {
      $options[] = t('Show if the following PHP code returns <code>TRUE</code> (PHP-mode, experts only).');
      $description .= ' '. t('If the PHP-mode is chosen, enter PHP code between %php. Note that executing incorrect PHP-code can break your Drupal site.', array('%php' => '<?php ?>'));
    }
    $form['form_vis_settings']['visibility'] = array(
      '#type' => 'radios',
      '#title' => t('Use un.captcha.lous on specific forms'),
      '#options' => $options,
      '#default_value' => $edit['visibility'],
    );
    $form['form_vis_settings']['pages'] = array(
      '#type' => 'textarea',
      '#title' => t('Form Ids'),
      '#default_value' => $edit['pages'],
      '#description' => $description,
    );

  return system_settings_form($form);
}

/**
 * Implementation of hook_form_alter().
 */

function uncaptchalous_form_alter(&$form, $form_state, $form_id) {

  if (variable_get('uncaptchalous_javascript', 0)) {
    drupal_add_js(drupal_get_path('module', 'uncaptchalous') . '/uncaptchalous.js');
    $form['uncaptchalous_js_param1'] = array('#type' => 'hidden', '#value' => rand(1,1000000));
    $form['uncaptchalous_js_param2'] = array('#type' => 'hidden', '#value' => rand(1,1000000));
    $form['uncaptchalous_js_val'] = array('#type' => 'hidden', '#value' => 0);
  }
  if (variable_get('uncaptchalous_honeypot_field', 0)) {

    $form['uncaptchalous_hp'] = array(
      '#attributes' => array('class' => 'uncaphp'),
      '#type' => 'textfield',
      '#title' => t(variable_get('uncaptchalous_honeypot_field_title', 'url')),
      '#default_value' => '',
      '#size' => 60,
      '#maxlength' => 128,
      '#prefix' => '<div id="uchp">',
      '#suffix' => '</div>',
    );
    drupal_add_css(drupal_get_path('module', 'uncaptchalous') . '/uncaptchalous.css');

  }
  $form['uncaptchalous']['#element_validate'] =  array('uncaptchalous_validate');
}

/**
 * Implementation of hook_validate().
 */

function uncaptchalous_validate($form, &$form_state) {
  if (variable_get('uncaptchalous_javascript', 0)) {
    if ($form['#post']['uncaptchalous_js_val'] != $form['#post']['uncaptchalous_js_param1'] + $form['#post']['uncaptchalous_js_param2']) {
      form_set_error('uncaptchalous_js_val',t('Javascript must be enabled to submit this form'));
    }
  }
  if (variable_get('uncaptchalous_honeypot_field', 0)) {
    if ($form['#post']['uncaptchalous_hp']) {
      form_set_error('uncaptchalous_hp',t('You have been detected as a bot.'));
    }
  }
}